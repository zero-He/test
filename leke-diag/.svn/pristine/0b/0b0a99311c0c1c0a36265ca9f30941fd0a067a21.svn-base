package cn.strong.leke.diag.controller;

import java.util.Map;

import javax.annotation.Resource;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;

import com.google.common.collect.Maps;

import cn.strong.leke.common.serialize.support.json.JsonUtils;
import cn.strong.leke.context.user.UserContext;
import cn.strong.leke.context.user.cst.RoleCst;
import cn.strong.leke.diag.model.Homework;
import cn.strong.leke.diag.model.HomeworkDtl;
import cn.strong.leke.diag.model.report.HwRptQuery;
import cn.strong.leke.diag.model.report.HwRptView;
import cn.strong.leke.diag.report.HomeworkReportHandler;
import cn.strong.leke.diag.service.HomeworkDtlService;
import cn.strong.leke.diag.service.HomeworkService;
import cn.strong.leke.framework.exceptions.Validation;
import cn.strong.leke.model.user.User;

@Controller
@RequestMapping("/auth/m/report/homework/")
public class MobileReportHomeworkController {

	@Resource
	private HomeworkService homeworkService;
	@Resource
	private HomeworkDtlService homeworkDtlService;
	@Resource
	private HomeworkReportHandler homeworkReportHandler;

	/**
	 * 作业整体报告
	 * @param homeworkId
	 * @param model
	 * @return
	 */
	@RequestMapping("/overall/{homeworkId}")
	public String overall(@PathVariable("homeworkId") Long homeworkId, Model model) {
		// 验证
		User user = UserContext.user.get();
		Validation.isForbidden(!RoleCst.TEACHER.equals(user.getCurrentRole().getId()));
		Homework homework = this.homeworkService.getHomeworkByHomeworkId(homeworkId);
		Validation.isPageNotFound(!homework.getTeacherId().equals(user.getId()));
		// 查询
		HwRptQuery query = new HwRptQuery();
		query.setHomeworkId(homeworkId);
		HwRptView hwRptView = this.homeworkReportHandler.execute(query);
		// 返回
		Map<String, Object> ReportCst = Maps.newHashMap();
		ReportCst.put("view", hwRptView);
		ReportCst.put("userName", user.getUserName());
		ReportCst.put("homeworkId", homeworkId);
		ReportCst.put("homeworkName", homework.getHomeworkName());
		ReportCst.put("classId", homework.getClassId());
		ReportCst.put("subjectId", homework.getSubjectId());
		model.addAttribute("ReportCst", JsonUtils.toJSON(ReportCst));
		return "/auth/m/report/homework-overall";
	}

	/**
	 * 老师查看学生作业报告
	 * @param homeworkId
	 * @param studentId
	 * @param model
	 * @return
	 */
	@RequestMapping("/detail/{homeworkId:\\d+}-{studentId:\\d+}")
	public String detail(@PathVariable("homeworkId") Long homeworkId, @PathVariable("studentId") Long studentId,
			Model model) {
		// 验证
		User user = UserContext.user.get();
		Validation.isForbidden(!RoleCst.TEACHER.equals(user.getCurrentRole().getId()));
		Homework homework = this.homeworkService.getHomeworkByHomeworkId(homeworkId);
		Validation.isPageNotFound(!homework.getTeacherId().equals(user.getId()));
		HomeworkDtl homeworkDtl = this.homeworkDtlService.getHomeworkDtlByHomeworkIdAndStudentId(homeworkId, studentId);
		Validation.isPageNotFound(homeworkDtl.getCorrectTime() == null);
		// 查询
		HwRptQuery query = new HwRptQuery();
		query.setHomeworkId(homeworkId);
		query.setHomeworkDtlId(homeworkDtl.getHomeworkDtlId());
		HwRptView hwRptView = this.homeworkReportHandler.execute(query);
		// 返回
		Map<String, Object> ReportCst = Maps.newHashMap();
		ReportCst.put("myself", false);
		ReportCst.put("view", hwRptView);
		ReportCst.put("userId", homeworkDtl.getStudentId());
		ReportCst.put("userName", homeworkDtl.getStudentName());
		ReportCst.put("homeworkId", homeworkId);
		model.addAttribute("ReportCst", JsonUtils.toJSON(ReportCst));
		return "/auth/m/report/homework-person";
	}

	/**
	 * 学生查看自已作业报告
	 * @param homeworkId
	 * @param homeworkDtlId
	 * @param model
	 * @return
	 */
	@RequestMapping("/person/{homeworkId:\\d+}-{homeworkDtlId:\\d+}")
	public String person(@PathVariable("homeworkId") Long homeworkId, @PathVariable("homeworkDtlId") Long homeworkDtlId,
			Model model) {
		// 验证
		HomeworkDtl homeworkDtl = this.homeworkDtlService.getHomeworkDtlByHomeworkDtlId(homeworkDtlId);
		Validation.isPageNotFound(homeworkDtl.getCorrectTime() == null);
		// 查询
		HwRptQuery query = new HwRptQuery();
		query.setHomeworkId(homeworkId);
		query.setHomeworkDtlId(homeworkDtlId);
		HwRptView hwRptView = this.homeworkReportHandler.execute(query);
		// 返回
		Map<String, Object> ReportCst = Maps.newHashMap();
		ReportCst.put("myself", true);
		ReportCst.put("view", hwRptView);
		ReportCst.put("userId", homeworkDtl.getStudentId());
		ReportCst.put("userName", homeworkDtl.getStudentName());
		ReportCst.put("homeworkId", homeworkId);
		model.addAttribute("ReportCst", JsonUtils.toJSON(ReportCst));
		return "/auth/m/report/homework-person";
	}
}
