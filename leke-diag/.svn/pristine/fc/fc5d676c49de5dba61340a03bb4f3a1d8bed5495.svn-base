package cn.strong.leke.diag.controller;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.google.common.collect.Lists;

import cn.strong.leke.common.serialize.support.json.JsonUtils;
import cn.strong.leke.common.utils.CollectionUtils;
import cn.strong.leke.context.user.UserContext;
import cn.strong.leke.context.user.cst.RoleCst;
import cn.strong.leke.diag.manage.ReportCycleService;
import cn.strong.leke.diag.model.report.DataZone;
import cn.strong.leke.diag.model.report.ScoreRptQuery;
import cn.strong.leke.diag.model.report.StuScoreRptView;
import cn.strong.leke.diag.report.StuComboScoreReportHandler;
import cn.strong.leke.diag.report.StuSubjScoreReportHandler;
import cn.strong.leke.framework.web.JsonResult;
import cn.strong.leke.lesson.model.ClazzQuery;
import cn.strong.leke.model.base.Clazz;
import cn.strong.leke.model.user.User;
import cn.strong.leke.remote.model.tukor.SubjectRemote;
import cn.strong.leke.remote.service.lesson.IKlassRemoteService;

/**
 * 学生报告。
 * @author  andy
 * @created 2016年11月12日 上午10:24:05
 * @since   v1.0.0
 */
@Controller
@RequestMapping({ "/auth/common/report/person/", "/auth/hd/report/person/" })
public class ReportPersonScoreController {

	@Resource
	private IKlassRemoteService klassRemoteService;
	@Resource
	private ReportCycleService reportCycleService;

	@Resource
	private StuComboScoreReportHandler stuComboScoreReportHandler;
	@Resource
	private StuSubjScoreReportHandler stuSubjScoreReportHandler;

	/**
	 * 获取学生行政班信息
	 * @param userId
	 * @return
	 */
	private Clazz getOrganClazzByUserId(Long userId) {
		ClazzQuery query = new ClazzQuery();
		query.setUserId(userId);
		query.setRoleId(RoleCst.STUDENT);
		query.setType(Clazz.CLAZZ_ORGAN);
		List<Clazz> clazzList = this.klassRemoteService.findClazzByQuery(query);
		return CollectionUtils.getFirst(clazzList);
	}

	/**
	 * 学生成绩报告页面
	 * @param model
	 * @return
	 */
	@RequestMapping(value = "/score", method = RequestMethod.GET)
	public String score(@RequestParam(defaultValue = "0") int mode, Model model, HttpServletRequest request) {
		User user = UserContext.user.get();
		Clazz clazz = this.getOrganClazzByUserId(user.getId());
		Long classId = clazz != null ? clazz.getClassId() : null;
		List<DataZone> zones = Lists.newArrayList();
		if (mode == 0 || mode == 1) {
			zones.add(new DataZone("综合", classId, 0L));
		}
		if (mode == 0 || mode == 2) {
			List<SubjectRemote> subjectRemotes = UserContext.user.findSubjectsOfCurrentSchool();
			subjectRemotes.forEach(v -> zones.add(new DataZone(v.getSubjectName(), classId, v.getSubjectId())));
		}
		List<Map<String, Object>> types = this.reportCycleService.buildReportTypes();
		Map<String, Object> ReportCst = new HashMap<>();
		ReportCst.put("userName", user.getUserName());
		ReportCst.put("types", types);
		ReportCst.put("zones", zones);
		ReportCst.put("mode", mode);
		ReportCst.put("device", request.getAttribute("device"));
		model.addAttribute("ReportCst", JsonUtils.toJSON(ReportCst));
		return "/auth/common/report/person-score";
	}

	/**
	 * 学生成绩报告查询
	 * @param query
	 * @return
	 */
	@ResponseBody
	@RequestMapping(value = "/score2", method = RequestMethod.POST)
	public JsonResult score2(ScoreRptQuery query) {
		query.setStudentId(UserContext.user.getUserId());
		StuScoreRptView view;
		if (query.getSubjectId() > 0) {
			view = this.stuSubjScoreReportHandler.execute(query);
		} else {
			view = this.stuComboScoreReportHandler.execute(query);
		}
		return new JsonResult().addDatas("view", view);
	}

	/**
	 * 综合成绩报告
	 * @param model
	 * @return
	 */
	@RequestMapping("/combined")
	public String combined(Model model, HttpServletRequest request) {
		model.addAttribute("subnav", "combined");
		model.addAttribute("title", "综合分析报告");
		return this.score(1, model, request);
	}

	/**
	 * 学科成绩报告
	 * @param model
	 * @return
	 */
	@RequestMapping("/subject")
	public String subject(Model model, HttpServletRequest request) {
		model.addAttribute("subnav", "subject");
		model.addAttribute("title", "学科分析报告");
		return this.score(2, model, request);
	}
}
