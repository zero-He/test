package cn.strong.leke.diag.controller;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.google.common.collect.Lists;

import cn.strong.leke.common.serialize.support.json.JsonUtils;
import cn.strong.leke.context.user.UserContext;
import cn.strong.leke.diag.dao.homework.model.WorkDtlQuery;
import cn.strong.leke.diag.dao.homework.mybatis.HomeworkDtlDao;
import cn.strong.leke.diag.manage.LessonBehaviorService;
import cn.strong.leke.diag.manage.ReportCycleService;
import cn.strong.leke.diag.model.report.BehaviorRptQuery;
import cn.strong.leke.diag.model.report.BehaviorRptView;
import cn.strong.leke.diag.model.report.DataZone;
import cn.strong.leke.diag.model.report.ReportCycle;
import cn.strong.leke.diag.report.StudentBehaviorReportHandler;
import cn.strong.leke.framework.page.jdbc.Page;
import cn.strong.leke.framework.web.JsonResult;
import cn.strong.leke.lessonlog.model.LessonBehavior;
import cn.strong.leke.model.user.User;

/**
 * 学生行为分析报告
 * @author  andy
 * @since   v1.0.0
 */
@Controller
@RequestMapping({ "/auth/common/report/person/", "/auth/hd/report/person/" })
public class ReportBehaviorController {
	
	@Resource
	private HomeworkDtlDao homeworkDtlDao;
	@Resource
	private ReportCycleService reportCycleService;
	@Resource
	private LessonBehaviorService lessonBehaviorService;
	@Resource
	private StudentBehaviorReportHandler studentBehaviorReportHandler;

	/**
	 * 行为分析报告页面
	 * @param model
	 * @return
	 */
	@RequestMapping("/behavior/index")
	public String behavior(Model model, HttpServletRequest request) {
		User user = UserContext.user.get();
		List<DataZone> zones = Lists.newArrayList(new DataZone("全部", 0L, 0L));
		List<Map<String, Object>> types = this.reportCycleService.buildReportTypes();
		Map<String, Object> ReportCst = new HashMap<>();
		ReportCst.put("userName", user.getUserName());
		ReportCst.put("types", types);
		ReportCst.put("zones", zones);
		ReportCst.put("device", request.getAttribute("device"));
		model.addAttribute("ReportCst", JsonUtils.toJSON(ReportCst));
		return "/auth/common/report/person-behavior";
	}

	/**
	 * 行为分析报告数据
	 * @param query
	 * @return
	 */
	@ResponseBody
	@RequestMapping("/behavior/index2")
	public JsonResult behavior(BehaviorRptQuery query) {
		query.setStudentId(UserContext.user.getUserId());
		BehaviorRptView view = this.studentBehaviorReportHandler.execute(query);
		return new JsonResult().addDatas("view", view);
	}

	/**
	 * 行为分析报告作业完成详情页面
	 * @param model
	 * @return
	 */
	@RequestMapping("/behavior/homework")
	public String homework(Integer cycleId, Model model) {
		ReportCycle reportCycle = this.reportCycleService.getReportCycleById(cycleId);
		model.addAttribute("reportCycle", reportCycle);
		return "/auth/common/report/person-behavior-homework";
	}

	/**
	 * 行为分析报告作业完成详情数据
	 * @param cycleId
	 * @return
	 */
	@ResponseBody
	@RequestMapping("/behavior/homework2")
	public JsonResult homework(Integer cycleId, Integer submitStatus, Page page) {
		Long studentId = UserContext.user.getUserId();
		ReportCycle reportCycle = this.reportCycleService.getReportCycleById(cycleId);
		WorkDtlQuery query = new WorkDtlQuery();
		query.setStudentId(studentId);
		query.setStartTime(reportCycle.getStart());
		query.setEndTime(reportCycle.getEnd());
		query.setSubmitStatus(submitStatus);
		List<Map<String, Object>> list = this.homeworkDtlDao.findWorkDtlsByQuery(query, page);
		page.setDataList(list);
		return new JsonResult().addDatas("page", page);
	}

	/**
	 * 行为分析报告作业课堂行为列表页面
	 * @param model
	 * @return
	 */
	@RequestMapping("/behavior/inclass")
	public String inclass(Integer cycleId, Model model) {
		ReportCycle reportCycle = this.reportCycleService.getReportCycleById(cycleId);
		model.addAttribute("reportCycle", reportCycle);
		return "/auth/common/report/person-behavior-inclass";
	}

	/**
	 * 行为分析报告作业课堂行为列表数据
	 * @param cycleId
	 * @return
	 */
	@ResponseBody
	@RequestMapping("/behavior/inclass2")
	public JsonResult inclass(Integer cycleId, Page page) {
		Long studentId = UserContext.user.getUserId();
		ReportCycle reportCycle = this.reportCycleService.getReportCycleById(cycleId);
		List<LessonBehavior> list = this.lessonBehaviorService.findStudentBehaviorByStudentId(studentId,
				reportCycle.getStart(), reportCycle.getEnd(), page);
		page.setDataList(list);
		return new JsonResult().addDatas("page", page);
	}
}
