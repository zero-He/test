<?xml version="1.0" encoding="UTF-8" ?>   <!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"><mapper namespace="cn.strong.leke.homework.dao.mybatis.HomeworkSnapshotDao">	<update id="updateHomeworkIsSnapshot" parameterType="map">	<![CDATA[		UPDATE HW_HOMEWORK		   SET isSnapshot = 1,			   modifiedOn = now(),			   modifiedBy = #{userId} 		 WHERE homeworkId = #{homeworkId}	]]>	</update>	<insert id="insertFullScoreHomeworkDtl" parameterType="map"> 	<![CDATA[ 		INSERT INTO HW_HOMEWORK_DTL ( 		    homeworkId, version, studentId, studentName, startTime, usedTime, submitTime, submitStatus, submitSource, 		    correctCount, correctTime, correctSource, soundFile, bugFixTime, bugFixSource, reviewTime, reviewSource, 		    score, scoreRate, schoolId, isDeleted, createdBy, createdOn, modifiedBy, modifiedOn, orderTime, errorTotal) 		SELECT #{newHomeworkId}, version, studentId, studentName, startTime, usedTime, submitTime, 1, submitSource, 		    correctCount, correctTime, correctSource, soundFile, bugFixTime, bugFixSource, reviewTime, reviewSource, 		    score, scoreRate, schoolId, isDeleted, createdBy, createdOn, modifiedBy, modifiedOn, #{closeTime}, errorTotal 		  FROM HW_HOMEWORK_DTL 		 WHERE isDeleted = 0 		   AND homeworkId = #{oldHomeworkId} 		   AND scoreRate = 1 	]]>	</insert>	<insert id="insertNoFullScoreHomeworkDtl" parameterType="map"> 	<![CDATA[ 		INSERT INTO HW_HOMEWORK_DTL (homeworkId, studentId, studentName, submitStatus, 		   	schoolId, orderTime, isDeleted, createdBy, createdOn, modifiedBy, modifiedOn) 		SELECT #{newHomeworkId}, studentId, studentName, 0, schoolId, #{closeTime}, 0, createdBy, now(), modifiedBy, now() 		  FROM HW_HOMEWORK_DTL 		 WHERE isDeleted = 0 		   AND homeworkId = #{oldHomeworkId} 		   AND (scoreRate != 1 OR scoreRate IS NULL) 	]]>	</insert>	<insert id="insertClearScoreHomeworkDtl" parameterType="map"> 	<![CDATA[ 		INSERT INTO HW_HOMEWORK_DTL (homeworkId, studentId, studentName, submitStatus, 		   	schoolId, orderTime, isDeleted, createdBy, createdOn, modifiedBy, modifiedOn) 		SELECT #{newHomeworkId}, studentId, studentName, 0, schoolId, #{closeTime}, 0, createdBy, now(), modifiedBy, now() 		  FROM HW_HOMEWORK_DTL 		 WHERE isDeleted = 0 		   AND homeworkId = #{oldHomeworkId} 	]]>	</insert>	<select id="updateHomeworkDtlIsFinished" parameterType="map">	<![CDATA[		UPDATE HW_HOMEWORK_DTL		   SET version = version + 1,		       startTime = #{startTime},		       submitTime = #{submitTime},		       usedTime = 120,		       submitStatus = 1,		       submitSource = 2,		       bugFixStage = 0,		       bugFixCount = 1,		       bugFixTime = #{submitTime},		       modifiedOn = NOW()		 WHERE isDeleted = 0		   AND homeworkId = #{homeworkId}	]]>	</select>		<select id="findNoFullScoreUserId" resultType="long"> 	<![CDATA[ 		SELECT  			studentId 		FROM HW_HOMEWORK_DTL 		WHERE isDeleted = 0 		   AND homeworkId = #{homeworkId} 		   AND (scoreRate != 1 or scoreRate IS NULL) 	]]>	</select>	<select id="findFlowAfterClassHomeworkIdsByLessonId" parameterType="long" resultType="long">	<![CDATA[		SELECT MAX(homeworkId)		  FROM HW_HOMEWORK		 WHERE isDeleted = 0		   AND status = 1		   AND usePhase <= 2		   AND resType = 3		   AND isSnapshot = 0		   AND beikeGuid IS NOT NULL		   AND courseSingleId = #{lessonId}		 GROUP BY beikeGuid	]]>	</select></mapper>    