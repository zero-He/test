package cn.strong.leke.homework.service;

import java.util.Date;
import java.util.List;
import java.util.Map;

import cn.strong.leke.framework.page.jdbc.Page;
import cn.strong.leke.homework.model.ApiHwCount;
import cn.strong.leke.homework.model.ClassAddUserEvent;
import cn.strong.leke.homework.model.Homework;
import cn.strong.leke.homework.model.HomeworkDTO;
import cn.strong.leke.homework.model.HomeworkDtl;
import cn.strong.leke.homework.model.HomeworkForm;
import cn.strong.leke.homework.model.HomeworkQuery;
import cn.strong.leke.homework.model.query.ApiHomeworkListQuery;
import cn.strong.leke.homework.model.query.ClassHomeworkQuery;
import cn.strong.leke.model.base.Subject;
import cn.strong.leke.model.user.User;
import cn.strong.leke.notice.model.todo.HwAssignEvent;
import cn.strong.leke.remote.model.homework.HomeworkAssignRemote;
import cn.strong.leke.remote.model.homework.HomeworkRemote;
import cn.strong.leke.remote.model.homework.VodHwAssignRemote;
import cn.strong.leke.remote.model.homework.VodHwAssignRemote.ResInfo;
import cn.strong.leke.tutor.model.course.ScheduleQuery;
import cn.strong.leke.tutor.model.course.ScheduleStat;

/**
 * 老师作业表服务接口。
 */
public interface HomeworkService {

	/**
	 * 快速布置作业，只要作业ID和班级ID
	 * @param classIds
	 * @param paperIds
	 * @param closeTime
	 * @param user
	 * @return
	 */
	public List<Long> saveFastAssignHomework(List<Long> classIds, List<Long> paperIds, Date closeTime, User user);

	/**
	 * 布置作业。<br>
	 * 预期的调用者：页面布置作业。
	 * @param homework
	 */
	public List<HomeworkRemote> saveHomework(HomeworkForm homeworkForm);

	/**
	 * 布置作业。<br>
	 * 预期的调用者：备课系统
	 * @param homeworkAssignList 作业信息列表
	 */
	public void saveAssignHomework(List<HomeworkAssignRemote> homeworkAssignList);

	/**
	 * 点播课作业布置
	 * @caller resource
	 * @param assignRemote
	 * @return
	 */
	public List<ResInfo> saveAssignHomework(VodHwAssignRemote assignRemote);

	/**
	 * 根据学生购买消息补全套课作业
	 * @param event
	 */
	public void saveCourseSetUserMQ(ClassAddUserEvent event);

	/**
	 * 创建点播作业
	 * @param homeworkId
	 * @param user
	 * @return
	 */
	public HomeworkDtl resolveStuVodHwWithTx(Long homeworkId, User user);

	/**
	 * 批量创建点播作业
	 * @param homeworkIds
	 * @param user
	 */
	public void createStuVodHwWithTx(List<Long> homeworkIds, User user);

	/**
	 * 创建学生的备课作业
	 * @param homeworkId 作业ID
	 * @param user
	 * @return
	 */
	public HomeworkDtl createStuBeikeHwWithTx(Long homeworkId, User user);

	/**
	 * 单课时间修改后，修正作业时间。
	 * @param courseSingleId 单课ID
	 * @param startTime 开始时间
	 * @param endTime 结束时间
	 */
	public void updateHomeworkTimeByCourseSingle(Long courseSingleId, Date startTime, Date endTime);

	/**
	 * 多条件查询教师作业列表
	 * @param homework
	 * @param page
	 * @return
	 */
	public List<HomeworkDTO> findHomeworkList(HomeworkQuery homework, Page page);

	/**
	 * 多条件查询教务作业列表
	 * @param homework
	 * @param page
	 * @return
	 */
	public List<HomeworkDTO> findProvostHomeworkList(ClassHomeworkQuery query, Page page);

	/**
	 * 根据教师作业id查询详情
	 * @param homeworkId
	 * @return
	 */
	public Homework getHomeworkById(Long homeworkId);

	/**
	 * 根据老师ID、月份查询作业统计信息。
	 * @param teacherId
	 * @param month
	 */
	public List<ApiHwCount> getHwByMonth(Long teacherId, String month);

	/**
	 * 根据老师ID、日查询作业统计信息。
	 * @param teacherId
	 * @param day
	 * @return
	 */
	@Deprecated
	public List<Homework> getHwByDay(Long teacherId, String day);

	
	/**
	 * 查询老师作业
	 * @param query
	 * @return
	 */
	public List<Homework> findTeacherHomework(ApiHomeworkListQuery query);
	
	
	
	/**
	 * 统计老师作业数，待批改和待复批数
	 * @param teacherId
	 * @return
	 */
	public Map<String, Long> findTeacherHomeworkInfoTotal(Long teacherId);
	
	/**
	 * 统计学生作业数 待订正和待完成
	 * @param studentId
	 * @return
	 */
	public Map<String, Long> findStuHomeworkInfoTotal(Long studentId,Long subjectId);
	
	/**
	 * 描述: 根据教师ID和单课ID，查询随堂作业列表。
	 * @param teacherId
	 * @param courseSingleId
	 * @return
	 */
	public List<Homework> getHwByCourseSingleId(Long teacherId, Long courseSingleId);

	/**
	 * 描述: 根据教师ID,作业名称，作业类型分页查询随堂作业列表。
	 * @param teacherId
	 * @param homeorkName
	 * @param homeworkType
	 * @param page
	 * @return
	 */
	public List<Homework> getHwPageByCourseSingleId(Long teacherId, String homeworkName, Integer homeworkType,
			Page page);

	/**
	 * 描述: 根据教师ID和单课ID，查询随堂作业列表。
	 * @param teacherId
	 * @param courseSingleId
	 * @return
	 */
	@Deprecated
	public List<Homework> getHwByCourseSingleId2(Long teacherId, Long courseSingleId);

	/**
	 * 描述:根据月份和学生标识，查询学生每日作业数量。（以截止时间为准）
	 * @param studentId
	 * @param month
	 * @return
	 */
	public List<ApiHwCount> queryHwStuMonth(Long studentId, String month);

	/**
	 * 多条件查询教务所管辖班级作业
	 * @param homework
	 * @param page
	 * @return
	 */
	public List<HomeworkDTO> queryClassTeacherHomeworkList(ClassHomeworkQuery query, Page page);

	/**
	 * 描述:更新作业发布/截至时间
	 * @author  DuanYanming
	 * @created 2015年1月13日 下午3:52:49
	 * @since   v1.0.0 
	 * @param homeworkId
	 * @param startTime
	 * @param closeTime
	 * @return  void
	 */
	public void updateHomeworkDate(Long homeworkId, Date startTime, Date closeTime);

	/**
	 * 描述: 作业作废
	 * @author  DuanYanming
	 * @created 2015年1月14日 上午8:51:41
	 * @since   v1.0.0 
	 * @param homeworkId
	 * @return  void
	 */
	public void updateHomeworkInvalid(Long homeworkId, Long teacherId);

	public void updateHomeworkInvalid(Long homeworkId);

	/**
	 * 根据作业ID查询试卷ID
	 * @param homeworkIds
	 * @return
	 */
	public List<Long> findPaperIdsByHomeworkIds(List<Long> homeworkIds);

	/**
	 * 根据单课ID查询作业布置信息。
	 * @param courseSingleId
	 * @return
	 */
	public List<HwAssignEvent> findHwAssignEventsByCourseSingleId(Long courseSingleId);

	/**
	 * 根据条件查询作业日历表。
	 * @param query 查询条件
	 * @return
	 */
	public List<ScheduleStat> findHomeworkScheduleByQuery(ScheduleQuery query);

	/**
	 * 按照班级分组，查询老师批改作业数
	 * @param teacherId
	 * @return
	 */
	public List<Map<String, Object>> getCorrectHomeworks(Long teacherId, Date startTime);

	/**
	 * 老师：统计待复批作业数
	 * @param teacherId
	 * @return
	 */
	public Integer getReCorrectNum(HomeworkQuery query);

	/**老师：统计待复批作业列表
	 * @param query
	 * @return
	 */
	public List<Map<String, Object>> queryReCorrectHomeworkList(HomeworkQuery query, Page page);

	/**
	 * 老师： 公布试卷答案
	 * @param homeworkId
	 * @return
	 */
	public Integer saveOpenAnswer(Long homeworkId, Long teacherId);

	/**
	 * 老师： 自行校对试卷
	 * @param homeworkId
	 * @return
	 */
	public Integer saveSelfCheck(Long homeworkId, Long teacherId);

	/**
	 * 查询学校中某份试卷所有作业列表，按截止时间倒序排列。
	 * @param paperId 试卷ID
	 * @param schoolId 学校ID
	 * @return
	 */
	public List<Map<String, Object>> findHomeworkByPaperId(Long paperId, Long schoolId);

	/**
	 * 通过行政班级Id查询学科
	 * @param classId
	 * @return
	 */
	public List<Subject> findOrganClassSubject(Long classId);
	
	/**
	 * 执行老师作业批改和复批的激励奖惩
	 */
	void execTeacherHwIncentvie();
	
	/**
	 * 执行学生作业待订正和待完成的激励奖惩
	 */
	void execStudentHwIncentvie();

	/**
	 * 查询已经作废的作业
	 * @param query
	 * @param page
	 * @return
	 */
	List<HomeworkDTO> findDumpedHomeworkList(HomeworkQuery query, Page page);
	
	
	void delHomework(List<Long> homeworkIds,Long teacherId);
	
	void recoverHomework(List<Long> homeworkIds,Long teacherId);
}
