package cn.strong.leke.homework.util;

import java.util.ArrayList;
import java.util.List;
import java.util.stream.Collectors;

import cn.strong.leke.model.question.Answer;
import cn.strong.leke.model.question.QuestionDTO;

public class JsonQuestion {

	private Long questionId; // 题目ID
	private Boolean hasSub; // 是否有子题
	private Long parentId; // 父题ID
	private Integer ord; // 序号
	private Boolean subjective; // 主观性
	private String template; // 题型模板
	private String stemContent; // 题干内容
	private String analysisContent; // 解析内容
	private List<JsonAnswer> answers; // 答案列表
	private List<JsonQuestion> subs;

	public Long getQuestionId() {
		return questionId;
	}

	public void setQuestionId(Long questionId) {
		this.questionId = questionId;
	}

	public Boolean getHasSub() {
		return hasSub;
	}

	public void setHasSub(Boolean hasSub) {
		this.hasSub = hasSub;
	}

	public Long getParentId() {
		return parentId;
	}

	public void setParentId(Long parentId) {
		this.parentId = parentId;
	}

	public Integer getOrd() {
		return ord;
	}

	public void setOrd(Integer ord) {
		this.ord = ord;
	}

	public Boolean getSubjective() {
		return subjective;
	}

	public void setSubjective(Boolean subjective) {
		this.subjective = subjective;
	}

	public String getTemplate() {
		return template;
	}

	public void setTemplate(String template) {
		this.template = template;
	}

	public String getStemContent() {
		return stemContent;
	}

	public void setStemContent(String stemContent) {
		this.stemContent = stemContent;
	}

	public String getAnalysisContent() {
		return analysisContent;
	}

	public void setAnalysisContent(String analysisContent) {
		this.analysisContent = analysisContent;
	}

	public List<JsonAnswer> getAnswers() {
		return answers;
	}

	public void setAnswers(List<JsonAnswer> answers) {
		this.answers = answers;
	}

	public List<JsonQuestion> getSubs() {
		return subs;
	}

	public void setSubs(List<JsonQuestion> subs) {
		this.subs = subs;
	}

	static class JsonAnswer {
		private Long answerId; // 答案ID
		private Integer ord; // 序号
		private String answerContent; // 答案内容
		private Boolean isCorrect; // 是否是正确选项

		public Long getAnswerId() {
			return answerId;
		}

		public void setAnswerId(Long answerId) {
			this.answerId = answerId;
		}

		public Integer getOrd() {
			return ord;
		}

		public void setOrd(Integer ord) {
			this.ord = ord;
		}

		public String getAnswerContent() {
			return answerContent;
		}

		public void setAnswerContent(String answerContent) {
			this.answerContent = answerContent;
		}

		public Boolean getIsCorrect() {
			return isCorrect;
		}

		public void setIsCorrect(Boolean isCorrect) {
			this.isCorrect = isCorrect;
		}
	}

	public static JsonQuestion mapper(QuestionDTO question) {
		JsonQuestion jq = new JsonQuestion();
		jq.setQuestionId(question.getQuestionId());
		jq.setHasSub(question.getHasSub());
		jq.setParentId(question.getParentId());
		jq.setOrd(question.getOrd());
		jq.setSubjective(question.getSubjective());
		jq.setTemplate(question.getTemplate());
		if (question.getStem() != null) {
			jq.setStemContent(question.getStem().getStemContent());
		}
		if (question.getAnalysis() != null) {
			jq.setAnalysisContent(question.getAnalysis().getAnalysisContent());
		}
		if (question.getAnswers() != null) {
			List<JsonAnswer> answers = question.getAnswers().stream().map((Answer answer) -> {
				JsonAnswer ja = new JsonAnswer();
				ja.setAnswerId(answer.getAnswerId());
				ja.setOrd(answer.getOrd());
				ja.setAnswerContent(answer.getAnswerContent());
				ja.setIsCorrect(answer.getIsCorrect());
				return ja;
			}).collect(Collectors.toCollection(ArrayList::new));
			jq.setAnswers(answers);
		}
		if (question.getSubs() != null) {
			jq.setSubs(JsonQuestion.mapper(question.getSubs()));
		}
		return jq;
	}

	public static List<JsonQuestion> mapper(List<QuestionDTO> questions) {
		return questions.stream().map(JsonQuestion::mapper).collect(Collectors.toCollection(ArrayList::new));
	}
}
